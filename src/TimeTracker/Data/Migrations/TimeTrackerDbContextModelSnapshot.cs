// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TimeTracker.Data;

namespace TimeTracker.Data.Migrations
{
    [DbContext(typeof(TimeTrackerDbContext))]
    partial class TimeTrackerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TimeTracker.Domain.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Client 1"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Client 2"
                        });
                });

            modelBuilder.Entity("TimeTracker.Domain.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ClientId = 1L,
                            Name = "Project 1"
                        },
                        new
                        {
                            Id = 2L,
                            ClientId = 1L,
                            Name = "Project 2"
                        },
                        new
                        {
                            Id = 3L,
                            ClientId = 2L,
                            Name = "Project 3"
                        });
                });

            modelBuilder.Entity("TimeTracker.Domain.TimeEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("HourRate")
                        .HasColumnType("numeric");

                    b.Property<int>("Hours")
                        .HasColumnType("integer");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("TimeEntries");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "Time entry description 1",
                            EntryDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourRate = 25m,
                            Hours = 5,
                            ProjectId = 1L,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Description = "Time entry description 2",
                            EntryDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourRate = 25m,
                            Hours = 2,
                            ProjectId = 2L,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Description = "Time entry description 3",
                            EntryDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourRate = 25m,
                            Hours = 1,
                            ProjectId = 3L,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            Description = "Time entry description 4",
                            EntryDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourRate = 30m,
                            Hours = 8,
                            ProjectId = 3L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            Description = "Time entry description 5",
                            EntryDate = new DateTime(2019, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourRate = 25m,
                            Hours = 1,
                            ProjectId = 3L,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            Description = "Time entry description 6",
                            EntryDate = new DateTime(2019, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HourRate = 30m,
                            Hours = 8,
                            ProjectId = 3L,
                            UserId = 2L
                        });
                });

            modelBuilder.Entity("TimeTracker.Domain.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("HourRate")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            HourRate = 25m,
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2L,
                            HourRate = 30m,
                            Name = "Joan Doe"
                        });
                });

            modelBuilder.Entity("TimeTracker.Domain.Project", b =>
                {
                    b.HasOne("TimeTracker.Domain.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TimeTracker.Domain.TimeEntry", b =>
                {
                    b.HasOne("TimeTracker.Domain.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimeTracker.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
